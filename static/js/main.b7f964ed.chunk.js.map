{"version":3,"sources":["components/SinglePost/SinglePost.jsx","components/Posts/Posts.jsx","components/Comment/Comment.jsx","components/PostView/PostView.jsx","components/Header/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","textAlign","SinglePost","props","classes","history","useHistory","post","id","title","body","Card","className","CardMedia","component","alt","height","image","CardContent","Typography","gutterBottom","variant","length","substring","color","CardActions","Button","onClick","push","handleReadMore","size","marginTop","Posts","useState","posts","setPosts","useEffect","loadPosts","fetch","then","res","json","Container","Grid","container","spacing","map","key","item","xs","theme","flexGrow","paper","padding","margin","maxWidth","avatar","display","flexDirection","justifyContent","alignItems","Comment","comment","name","email","Paper","Avatar","src","Math","random","style","width","sm","direction","media","PostView","useParams","setPost","comments","setComments","loadPost","loadComment","ps","position","bottom","right","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","ScrollTop","children","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Header","Fragment","CssBaseline","AppBar","Toolbar","to","textDecoration","InputBase","placeholder","input","inputProps","exact","path","Fab","aria-label","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b7f964ed.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"left\",\n  },\n});\n\nconst handleReadMore = (oid) => {\n  console.log(oid);\n};\n\nexport default function SinglePost(props) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const { id, title, body } = props.post;\n\n  const handleReadMore = (id) => {\n    history.push(`/post/${id}`);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardMedia\n        component=\"img\"\n        alt=\"Contemplative Reptile\"\n        height=\"240\"\n        image={`https://loremflickr.com/600/400?random=${id}`}\n        title=\"Contemplative Reptile\"\n      />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {title.length > 25 ? title.substring(0, 25) + \"...\" : title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {body.length > 100 ? body.substring(0, 100) + \"...\" : body}\n        </Typography>\n      </CardContent>\n\n      <CardActions>\n        <Button\n          onClick={() => handleReadMore(id)}\n          size=\"small\"\n          color=\"secondary\"\n          variant=\"outlined\"\n        >\n          Read More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Grid, makeStyles } from \"@material-ui/core\";\nimport SinglePost from \"../SinglePost/SinglePost\";\n\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"30px\",\n  },\n});\n\nconst Posts = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  const loadPosts = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => res.json())\n      .then((post) => setPosts(post));\n  };\n\n  const classes = useStyles();\n  return (\n    <Container className={classes.root}>\n      <Grid container spacing={3}>\n        {posts.map((post) => (\n          <Grid key={post.id} item xs={4}>\n            <SinglePost post={post} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Posts;\n","import React from \"react\";\nimport { Paper, Grid, Typography, makeStyles, Avatar } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: 500,\n  },\n  avatar: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n}));\n\nconst Comment = (props) => {\n  const { name, email, body } = props.comment;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item xs={4}>\n            <div className={classes.avatar}>\n              <Avatar\n                src={`https://loremflickr.com/600/400?random=${\n                  Math.random() * 10\n                }`}\n                style={{ width: \"80px\", height: \"80px\" }}\n              />\n              <Typography variant=\"caption\">{email}</Typography>\n            </div>\n          </Grid>\n          <Grid item xs={8} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item>\n                <Typography gutterBottom variant=\"subtitle1\">\n                  {name}\n                </Typography>\n                <Typography variant=\"body2\" gutterBottom>\n                  {body}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n\nexport default Comment;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {\n  Container,\n  Grid,\n  Typography,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  CardActions,\n  Button,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Comment from \"../Comment/Comment\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: \"100%\",\n  },\n  media: {\n    height: 400,\n  },\n});\n\nconst PostView = () => {\n  const { id } = useParams();\n  const classes = useStyles();\n\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    loadPost();\n    loadComment();\n  }, []);\n\n  const loadPost = () => {\n    fetch(`https://jsonplaceholder.typicode.com/posts/${id}`)\n      .then((res) => res.json())\n      .then((ps) => setPost(ps));\n  };\n\n  const loadComment = () => {\n    fetch(`https://jsonplaceholder.typicode.com/comments?postId=${id}`)\n      .then((res) => res.json())\n      .then((comment) => setComments(comment));\n  };\n\n  return (\n    <Container style={{ marginTop: \"30px\" }} maxWidth=\"sm\">\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Card style={{ textAlign: \"left\" }}>\n            <CardMedia\n              className={classes.media}\n              image={`https://loremflickr.com/600/400?random=${id}`}\n              title=\"Contemplative Reptile\"\n            />\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {post.title}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {post.body}\n              </Typography>\n            </CardContent>\n\n            <CardContent>\n              <Typography variant=\"h5\" gutterBottom>\n                All Comments:\n              </Typography>\n              {comments.map((comment) => (\n                <Comment key={comment.id} comment={comment} />\n              ))}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default PostView;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\n\nimport Fab from \"@material-ui/core/Fab\";\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nimport Posts from \"../Posts/Posts\";\nimport PostView from \"../PostView/PostView\";\nimport { InputBase } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nfunction ScrollTop(props) {\n  const { children, window } = props;\n  const classes = useStyles();\n  // Note that you normally won't need to set the window ref as useScrollTrigger\n  // will default to window.\n  // This is only being set here because the demo is in an iframe.\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n    disableHysteresis: true,\n    threshold: 100,\n  });\n\n  const handleClick = (event) => {\n    const anchor = (event.target.ownerDocument || document).querySelector(\n      \"#back-to-top-anchor\"\n    );\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n}\n\nScrollTop.propTypes = {\n  children: PropTypes.element.isRequired,\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window: PropTypes.func,\n};\n\nexport default function Header(props) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar>\n        <Toolbar>\n          <Link to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>\n            <Typography variant=\"h6\">React Blog App</Typography>\n          </Link>\n\n          <div style={{ marginLeft: \"auto\" }} className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n\n      <Switch>\n        <Route exact path=\"/\" component={Posts} />\n        <Route path=\"/post/:id\" component={PostView} />\n      </Switch>\n\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Header />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}